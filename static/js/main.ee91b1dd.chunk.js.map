{"version":3,"sources":["serviceWorker.js","components/Dropdown/Dropdown.js","components/Dropdown/index.js","components/Chart/lib/util/format_axis_tick.js","components/Chart/lib/draw/line.js","components/Chart/lib/data_transformer.js","components/Chart/lib/draw/transformed_line_from_data.js","components/Chart/lib/config.js","components/Chart/lib/chart.js","components/Chart/lib/draw/x_axis.js","components/Chart/lib/draw/y_axis.js","components/Chart/lib/draw/ohlc_series.js","components/Chart/lib/drawings/drawing.js","components/Chart/lib/util/distance.js","components/Chart/lib/drawings/line.js","components/Chart/lib/drawings/horizontal_line.js","components/Chart/lib/drawings/vertical_line.js","components/Chart/lib/drawings/parallel_lines.js","components/LoadingBeeSpinner/index.js","components/LoadingBeeSpinner/LoadingBeeSpinner.js","components/IndicatorSettingsModal/index.js","components/IndicatorSettingsModal/IndicatorSettingsModal.js","components/Chart/index.js","components/Chart/Chart.js","Demo.js","index.js"],"names":["Boolean","window","location","hostname","match","Dropdown","props","state","open","onToggle","bind","this","setState","label","children","className","onClick","renderThumbVertical","style","backgroundColor","React","Component","OnClickOutside","tick","toPrecision","toLocaleString","maximumFractionDigits","drawLine","canvas","points","dashed","ctx","getContext","strokeStyle","setLineDash","beginPath","moveTo","x","y","i","length","lineTo","stroke","closePath","data","vWidth","rightMTS","defaultTargetWidth","defaultTargetHeight","maxP","_max","minP","_min","pd","defaultYModifier","defaultXModifier","dX","targetWidth","dY","targetHeight","point","p","mts","price","setTargetWidth","setTargetHeight","setYModifier","cb","setXModifier","color","transformer","yData","xData","ySize","xSize","yOffset","xOffset","push","CONFIG","AXIS_COLOR","AXIS_TICK_COLOR","AXIS_LABEL_COLOR","AXIS_LABEL_FONT_NAME","AXIS_LABEL_FONT_SIZE_PX","AXIS_LABEL_MARGIN_PX","AXIS_X_TICK_COUNT","AXIS_Y_TICK_COUNT","AXIS_MARGIN_BOTTOM","CROSSHAIR_COLOR","MARGIN_BOTTOM","MARGIN_RIGHT","INDICATOR_LABEL_X","TRADE_MARKER_RADIUS_PX","TRADE_MARKER_BUY_COLOR","TRADE_MARKER_SELL_COLOR","RISING_CANDLE_FILL","RISING_VOL_FILL","FALLING_CANDLE_FILL","FALLING_VOL_FILL","ZOOM_CANDLE_STEP","ZOOM_MIN_LIMIT_CANDLES","set","key","value","BitfinexTradingChart","ohlcCanvas","axisCanvas","drawingCanvas","indicatorCanvas","crosshairCanvas","width","height","trades","orders","position","dataWidth","dataKey","indicators","onLoadMoreCB","onHoveredCandleCB","onUpdateIndicatorSettingsCB","config","Object","keys","forEach","setConfig","TIME_FRAME_WIDTHS","viewportWidthCandles","candleWidthPX","Math","max","floor","isDragging","dragStart","mousePosition","vp","pan","origin","size","w","h","onMouseUp","onMouseDown","onMouseMove","onMouseLeave","onMouseWheel","addEventListener","mouseWheelListener","activeDrawing","drawings","externalIndicators","updateIndicators","updateData","clipCanvases","clearAll","renderAll","drawingCTX","ohlcCTX","vpHeight","getOHLCVPHeight","clipRegion","Path2D","rect","clip","isActive","ohlcHeight","slotHeight","onDataReset","indicatorData","indicatorInstances","ind","colors","ui","j","getDataType","c","Candle","getDataKey","add","v","nullP","lines","_isFinite","_isObject","clear","clearRect","panX","candlePanOffset","start","end","slice","dataInView","renderOHLC","renderTrades","renderIndicators","renderAxis","renderDrawings","renderOrders","renderPosition","getIndicatorDataInView","currentExtSlot","currentOverlaySlot","indicator","type","renderRSIIndicator","renderMACDIndicator","renderExternalLineIndicator","renderExternalLinesIndicator","renderOverlayLineIndicator","renderOverlayLinesIndicator","renderBBandsIndicator","slot","candlesToRender","getCandlesInView","_last","map","ohlc","topLinePoints","middleLinePoints","bottomLinePoints","d","top","middle","bottom","exSlot","iInstance","slotY","dataTransformer","drawTransformedLineFromData","renderExternalSlotMeta","getName","lineKey","lineData","maxV","macd","signal","minV","divergenceTransformer","divergence","xAxes","axis","axisY","drawHorizontalVPLine","fillStyle","textAlign","fillText","formatAxisTick","linePoints","candlesInView","leftMTS","mtsPerPX","pricePerPX","mouseMTS","mousePrice","labelX","Date","labelY","labelXWidth","measureText","labelYWidth","fillRect","candleDistances","abs","sort","a","b","render","candles","visibleOrders","filter","getOHLCTransformer","o","amount","labelWidth","font","basePrice","high","vpWidth","rangeLengthMTS","tickWidthPX","ticks","tickDivisor","dayCount","hourCount","previousTick","paddedLeftMTS","tickX","tickY","date","getDay","moment","format","drawXAxis","tickHeightPX","tickHeightPrice","drawYAxis","candleWidth","maxVol","l","oPX","hPX","lPX","cPX","drawOHLCSeries","arc","PI","getMTSForRawX","getPriceForRawY","e","getBoundingClientRect","pageX","left","pageY","target","cursor","renderCrosshair","_isFunction","dx","dy","dz","ev","delta","preventDefault","stopPropagation","Drawing","chart","anchors","active","moving","anchorX","keyX","lastMouseX","_get","anchorY","keyY","lastMouseY","hasMovingAnchor","x1","y1","x2","y2","sqrt","pow","_set","LineDrawing","getOHLCMousePosition","renderAnchors","HorizontalLineDrawing","VerticalLineDrawing","ParallelLineDrawing","parallel","m","pLinePoints","pB","LoadingBeeSpinner","version","id","xmlns","xmlnsXlink","viewBox","enableBackground","xmlSpace","opacity","PureComponent","IndicatorSettingsModal","values","settings","argsDef","args","arg","_isString","default","onValueChange","onSave","index","nextValues","onClose","onDelete","name","onChange","Chart","hoveredCandle","indicatorSettings","settingsModalOpen","settingsModalIndicatorIndex","isFullscreen","onHoveredCandle","onCloseIndicatorSettings","onOpenIndicatorSettings","onUpdateIndicatorSettings","onSaveIndicatorSettings","onToggleFullscreen","onFullscreenExit","wrapperRef","createRef","ohlcCanvasRef","axisCanvasRef","drawingCanvasRef","indicatorCanvasRef","crosshairCanvasRef","onLoadMore","onTimeFrameChange","marketLabel","document","current","console","error","ChartLib","onTimeFrameChangeCB","getTopReservedSpace","prevProps","disableToolbar","disableTopbar","updateDimensions","innerWidth","getChartHeight","updateTrades","updateDrawings","updateOrders","updatePosition","removeEventListener","extCount","Class","onUpdateIndicatorArgs","fullscreenElement","mozFullscreenElement","msFullscreenElement","webkitFullscreenElement","exitFullscreen","setTimeout","requestFullscreen","innerHeight","onAddIndicator","randomColor","Error","space","bgColor","onAddDrawing","isSyncing","onDeleteIndicator","disableIndicators","candleLoadingThreshold","topReservedSpace","renderHeight","canvasStyle","ref","background","tf","ClassNames","HFI","humanLabel","borderColor","MockCandleData","Demo","chartRef","loadIndicators","localStorage","JSON","parse","getItem","iClassID","iArgs","iColors","BFXI","find","deferSaveState","D","nextIndicators","splice","nextIndicator","saveState","stored","iClass","setItem","stringify","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee91b1dd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport OnClickOutside from 'react-onclickoutside'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport './Dropdown.css'\n\nclass Dropdown extends React.Component {\n  state = {\n    open: false,\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.onToggle = this.onToggle.bind(this)\n  }\n\n  handleClickOutside () {\n    this.setState(() => ({\n      open: false,\n    }))\n  }\n\n  onToggle () {\n    this.setState(({ open }) => ({\n      open: !open,\n    }))\n  }\n\n  render () {\n    const { label, children } = this.props\n    const { open } = this.state\n\n    return (\n      <div className='bfxc__dropdown-wrapper'>\n        <p onClick={this.onToggle}>{label}</p>\n\n        {open && (\n          <div className='bfxc__dropdown-menu'>\n            <Scrollbars\n              renderThumbVertical={({ style, ...props }) => (\n                <div\n                  style={{\n                    ...style,\n                    backgroundColor: '#333',\n                  }}\n\n                  {...props}\n                />\n              )}\n            >\n              {children}\n            </Scrollbars>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default OnClickOutside(Dropdown)\n","import Dropdown from './Dropdown'\nexport default Dropdown\n","\nexport default (tick) => {\n  return +(tick.toPrecision(8).toLocaleString('en-US', {\n    maximumFractionDigits: 8,\n  }))\n}\n","/**\n * Draw a line composed of multiple points\n *\n * @param {Canvas} canvas - target\n * @param {string} style - 2d ctx strokeStyle\n * @param {Object[]} points - array of { x, y } points\n * @param {boolean?} dashed\n */\nexport default function drawLine (canvas, style, points = [], dashed) {\n  const ctx = canvas.getContext('2d')\n\n  ctx.strokeStyle = style\n\n  if (dashed) {\n    ctx.setLineDash([5, 3])\n  } else {\n    ctx.setLineDash([])\n  }\n\n  ctx.beginPath()\n  ctx.moveTo(points[0].x, points[0].y)\n\n  for (let i = 1; i < points.length; i += 1) {\n    ctx.lineTo(points[i].x, points[i].y)\n  }\n\n  ctx.stroke()\n  ctx.closePath()\n}\n","import _max from 'lodash/max'\nimport _min from 'lodash/min'\n\n/**\n * Returns a transformer object with methods to map X & Y coords to a certain\n * viewport.\n *\n * @param {number[]} data - complete dataset for min/max bounds\n * @param {number} vWidth - viewport width in pixels\n * @param {number} rightMTS - right-most timestamp\n * @return {Object} transformer\n */\nexport default function (data, vWidth, rightMTS) {\n  const maxP = _max(data)\n  const minP = _min(data)\n  const pd = maxP - minP\n\n  let defaultTargetWidth\n  let defaultTargetHeight\n  let defaultYModifier = y => y\n  let defaultXModifier = x => x\n\n  const x = (dX, targetWidth = defaultTargetWidth) => {\n    return defaultXModifier(((vWidth - (rightMTS - dX)) / vWidth) * targetWidth)\n  }\n\n  const y = (dY, targetHeight = defaultTargetHeight) => {\n    return defaultYModifier(((dY - minP) / pd) * targetHeight)\n  }\n\n  const point = (p) => {\n    return {\n      x: x(p.mts),\n      y: y(p.price),\n    }\n  }\n\n  const setTargetWidth = (targetWidth) => {\n    defaultTargetWidth = targetWidth\n  }\n\n  const setTargetHeight = (targetHeight) => {\n    defaultTargetHeight = targetHeight\n  }\n\n  const setYModifier = (cb) => {\n    defaultYModifier = cb\n  }\n\n  const setXModifier = (cb) => {\n    defaultXModifier = cb\n  }\n\n  return {\n    x, y, point, setTargetWidth, setTargetHeight, setYModifier, setXModifier\n  }\n}\n","import drawLine from './line'\n\nexport default function (canvas, color, transformer, {\n  yData,\n  xData,\n  ySize,\n  xSize,\n  yOffset = 0,\n  xOffset = 0,\n}) {\n  const points = []\n\n  for (let i = 0; i < xData.length; i += 1) {\n    points.push({\n      y: yOffset - transformer.y(yData[i], ySize),\n      x: transformer.x(xData[i], xSize) + xOffset,\n    })\n  }\n\n  drawLine(canvas, color, points)\n}\n","const CONFIG = {\n  AXIS_COLOR: '#333',\n  AXIS_TICK_COLOR: '#222',\n  AXIS_LABEL_COLOR: '#999',\n  AXIS_LABEL_FONT_NAME: 'sans-serif',\n  AXIS_LABEL_FONT_SIZE_PX: 12,\n  AXIS_LABEL_MARGIN_PX: 10,\n\n  AXIS_X_TICK_COUNT: 12,\n  AXIS_Y_TICK_COUNT: 8,\n  AXIS_MARGIN_BOTTOM: 50,\n\n  CROSSHAIR_COLOR: '#666',\n  MARGIN_BOTTOM: 25,\n  MARGIN_RIGHT: 80,\n  INDICATOR_LABEL_X: 25,\n\n  TRADE_MARKER_RADIUS_PX: 5,\n  TRADE_MARKER_BUY_COLOR: '#0f0',\n  TRADE_MARKER_SELL_COLOR: '#f00',\n\n  RISING_CANDLE_FILL: '#16b157',\n  RISING_VOL_FILL: 'rgba(9, 69, 34, 0.3)',\n  FALLING_CANDLE_FILL: '#f05359',\n  FALLING_VOL_FILL: 'rgba(94, 32, 35, 0.3)',\n\n  ZOOM_CANDLE_STEP: 5,\n  ZOOM_MIN_LIMIT_CANDLES: 20,\n}\n\nconst set = (key, value) => {\n  CONFIG[key] = value\n}\n\nexport default CONFIG\nexport { set }\n","import _isFunction from 'lodash/isFunction'\nimport _isFinite from 'lodash/isFinite'\nimport _isObject from 'lodash/isObject'\nimport _last from 'lodash/last'\nimport _max from 'lodash/max'\nimport _min from 'lodash/min'\nimport { Candle } from 'bfx-api-node-models'\nimport { TIME_FRAME_WIDTHS } from 'bfx-hf-util'\nimport mouseWheelListener from 'mouse-wheel'\n\nimport formatAxisTick from './util/format_axis_tick'\nimport drawLine from './draw/line'\nimport dataTransformer from './data_transformer'\nimport drawTransformedLineFromData from './draw/transformed_line_from_data'\nimport drawOHLCSeries from './draw/ohlc_series'\nimport drawXAxis from './draw/x_axis'\nimport drawYAxis from './draw/y_axis'\n\nimport CONFIG, { set as setConfig } from './config'\n\nexport default class BitfinexTradingChart {\n  constructor ({\n    ohlcCanvas,\n    axisCanvas,\n    drawingCanvas,\n    indicatorCanvas,\n    crosshairCanvas,\n    width,\n    height,\n    trades = [],\n    orders = [],\n    position,\n    data,\n    dataWidth,\n    dataKey,\n    indicators = [],\n    onLoadMoreCB,\n    onHoveredCandleCB,\n    onUpdateIndicatorSettingsCB,\n    config = {},\n  }) {\n\n    Object.keys(config).forEach(key => {\n      setConfig(key, config[key])\n    })\n\n    this.ohlcCanvas = ohlcCanvas\n    this.axisCanvas = axisCanvas\n    this.drawingCanvas = drawingCanvas\n    this.indicatorCanvas = indicatorCanvas\n    this.crosshairCanvas = crosshairCanvas\n    this.width = width\n    this.height = height\n    this.trades = trades\n    this.orders = orders\n    this.position = position\n    this.dataWidth = TIME_FRAME_WIDTHS[dataWidth]\n    this.onLoadMoreCB = onLoadMoreCB\n    this.onHoveredCandleCB = onHoveredCandleCB\n    this.onUpdateIndicatorSettingsCB = onUpdateIndicatorSettingsCB\n    this.viewportWidthCandles = 200\n    this.candleWidthPX = Math.max(1, 7 - Math.floor(this.viewportWidthCandles / 50))\n    this.isDragging = false\n    this.dragStart = null\n    this.mousePosition = { x: 0, y: 0 }\n    this.vp = {\n      pan: { x: 0, y: 0 },\n      origin: { x: 0, y: 0 },\n      size: { w: width - CONFIG.MARGIN_RIGHT - 0.5, h: height - CONFIG.MARGIN_BOTTOM - CONFIG.AXIS_MARGIN_BOTTOM - 0.5 }\n    }\n\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.onMouseMove = this.onMouseMove.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n    this.onMouseWheel = this.onMouseWheel.bind(this)\n\n    this.crosshairCanvas.addEventListener('mouseup', this.onMouseUp)\n    this.crosshairCanvas.addEventListener('mousedown', this.onMouseDown)\n    this.crosshairCanvas.addEventListener('mousemove', this.onMouseMove)\n    this.crosshairCanvas.addEventListener('mouseleave', this.onMouseLeave)\n\n    mouseWheelListener(this.crosshairCanvas, this.onMouseWheel)\n\n    this.activeDrawing = null\n    this.drawings = []\n    this.externalIndicators = 0 // set in updateData()\n\n    this.updateIndicators(indicators)\n    this.updateData(data, dataWidth, dataKey)\n    this.clipCanvases()\n\n    this.clearAll()\n    this.renderAll()\n  }\n\n  clipCanvases () {\n    const drawingCTX = this.drawingCanvas.getContext('2d')\n    const ohlcCTX = this.ohlcCanvas.getContext('2d')\n    const vpHeight = this.getOHLCVPHeight()\n    const clipRegion = new Path2D()\n\n    clipRegion.rect(0, 0, this.vp.size.w, vpHeight)\n\n    ohlcCTX.clip(clipRegion)\n    drawingCTX.clip(clipRegion)\n  }\n\n  updateDrawings (drawings = []) {\n    this.drawings = drawings\n\n    if (drawings[0] && drawings[0].isActive()) {\n      this.activeDrawing = drawings[0]\n    }\n  }\n\n  updateIndicators (indicators = []) {\n    this.indicators = indicators\n    this.updateData(this.data)\n\n    const ohlcHeight = this.getOHLCVPHeight()\n    const slotHeight = this.externalIndicators === 0\n      ? 0\n      : (this.vp.size.h - ohlcHeight) / this.externalIndicators\n\n    if (this.onUpdateIndicatorSettingsCB) {\n      this.onUpdateIndicatorSettingsCB(indicators, slotHeight)\n    }\n  }\n\n  updateTrades (trades = []) {\n    this.trades = trades\n    this.clearAll()\n    this.renderAll()\n  }\n\n  updateOrders (orders = []) {\n    this.orders = orders\n    this.clearAll()\n    this.renderAll()\n  }\n\n  updatePosition (position) {\n    this.position = position\n    this.clearAll()\n    this.renderAll()\n  }\n\n  /**\n   * Updates internal candle & indicator data sets\n   *\n   * @param {Array[]} data - candle dataset\n   * @param {number?} dataWidth - candle width, default unchanged\n   * @param {string} dataKey - optional, resets pan on change\n   */\n  updateData (data = [], dataWidth, dataKey) {\n    if (dataWidth) {\n      this.dataWidth = TIME_FRAME_WIDTHS[dataWidth]\n    }\n\n    if (this.dataKey && this.dataKey !== dataKey) {\n      this.onDataReset()\n    }\n\n    this.data = data\n    this.dataKey = dataKey\n    this.indicatorData = []\n    this.externalIndicators = 0\n\n    const indicatorInstances = []\n\n    for (let i = 0; i < this.indicators.length; i += 1) {\n      const ind = new this.indicators[i][0](this.indicators[i][1])\n      ind.colors = this.indicators[i][2]\n\n      if (ind.ui.position === 'external') {\n        this.externalIndicators += 1\n      }\n\n      indicatorInstances.push([ind, this.indicators[i][0]])\n    }\n\n    for (let i = 0; i < data.length; i += 1) {\n      for (let j = 0; j < indicatorInstances.length; j += 1) {\n        const ind = indicatorInstances[j][0]\n\n        if (ind.getDataType() === 'trade') {\n          continue\n        }\n\n        const c = new Candle(data[i])\n\n        if (ind.getDataKey() === '*') {\n          ind.add(c)\n        } else {\n          ind.add(c[ind.getDataKey()])\n        }\n\n        if (!this.indicatorData[j]) {\n          this.indicatorData[j] = []\n        }\n\n        const v = ind.v()\n        let nullP = 0\n        \n        if (indicatorInstances[j][1].ui.lines) {\n          nullP = {}\n          indicatorInstances[j][1].ui.lines.forEach(key => nullP[key] = 0)\n        }\n\n        this.indicatorData[j].push(_isFinite(v) || _isObject(v) ? v : nullP)\n      }\n    }\n\n    this.clearAll()\n    this.renderAll()\n  }\n\n  updateDimensions (width, height) {\n    this.width = width\n    this.height = height\n    this.vp.size.w = width - CONFIG.MARGIN_RIGHT - 0.5\n    this.vp.size.h = height - CONFIG.MARGIN_BOTTOM - CONFIG.AXIS_MARGIN_BOTTOM - 0.5\n\n    if (this.onUpdateIndicatorSettingsCB) {\n      const ohlcHeight = this.getOHLCVPHeight()\n      const slotHeight = this.externalIndicators === 0\n        ? 0\n        : (this.vp.size.h - ohlcHeight) / this.externalIndicators\n\n      this.onUpdateIndicatorSettingsCB(this.indicators, slotHeight)\n    }\n\n    this.clipCanvases()\n    this.clearAll()\n    this.renderAll()\n  }\n\n  /**\n   * Called when updated w/ data having a different dataKey. Resets pan\n   */\n  onDataReset () {\n    this.vp.pan.x = 0\n    this.vp.pan.y = 0\n    this.vp.origin.x = 0\n    this.vp.origin.y = 0\n  }\n\n  clearAll () {\n    this.clear(this.ohlcCanvas)\n    this.clear(this.axisCanvas)\n    this.clear(this.drawingCanvas)\n    this.clear(this.indicatorCanvas)\n    this.clear(this.crosshairCanvas)\n  }\n\n  clear (canvas) {\n    const ctx = canvas.getContext('2d')\n    const { width, height } = this\n    ctx.clearRect(0, 0, width, height)\n  }\n\n  getCandlesInView () {\n    const panX = this.vp.pan.x + this.vp.origin.x\n    const candlePanOffset = panX > 0 ? Math.floor(panX / this.candleWidthPX) : 0\n    const start = this.data.length - 1 - this.viewportWidthCandles - candlePanOffset\n    const end = this.data.length - 1 - candlePanOffset\n\n    if (end < 0) {\n      return []\n    }\n\n    return this.data.slice(_max([0, start]), end)\n  }\n\n  getIndicatorDataInView () {\n    const panX = this.vp.pan.x + this.vp.origin.x\n    const candlePanOffset = panX > 0 ? Math.floor(panX / this.candleWidthPX) : 0\n    const dataInView = []\n\n    for (let i = 0; i < this.indicatorData.length; i += 1) {\n      const start = this.indicatorData[i].length - 1 - this.viewportWidthCandles - candlePanOffset\n      const end = this.indicatorData[i].length - 1 - candlePanOffset\n\n      dataInView.push(this.indicatorData[i].slice(_max([0, start]), end))\n    }\n\n    return dataInView\n  }\n\n  renderAll () {\n    this.renderOHLC()\n    this.renderTrades()\n    this.renderIndicators()\n    this.renderAxis()\n    this.renderDrawings()\n    this.renderOrders()\n    this.renderPosition()\n  }\n\n  renderIndicators () {\n    if (this.data.length < 2) {\n      return\n    }\n\n    const indicatorData = this.getIndicatorDataInView()\n    let currentExtSlot = 0\n    let currentOverlaySlot = 0\n\n    for (let i = 0; i < this.indicators.length; i += 1) {\n      const indicator = this.indicators[i]\n      const data = indicatorData[i]\n      const iClass = indicator[0]\n      const { ui } = iClass\n      const { position, type } = ui\n\n      if (data.length === 0) {\n        continue\n      }\n\n      if (position === 'external') {\n        if (type === 'rsi') {\n          this.renderRSIIndicator(indicator, data, currentExtSlot++)\n        } else if (type === 'macd') {\n          this.renderMACDIndicator(indicator, data, currentExtSlot++)\n        } else if (type === 'line') {\n          this.renderExternalLineIndicator(indicator, data, currentExtSlot++)\n        } else if (type === 'lines') {\n          this.renderExternalLinesIndicator(indicator, data, currentExtSlot++)\n        }\n      } else if (position === 'overlay') {\n        if (type === 'line') {\n          this.renderOverlayLineIndicator(indicator, data, currentOverlaySlot++)\n        } else if (type === 'lines') {\n          this.renderOverlayLinesIndicator(indicator, data, currentOverlaySlot++)\n        } else if (type === 'bbands') {\n          this.renderBBandsIndicator(indicator, data, currentOverlaySlot++)\n        }\n      }\n    }\n  }\n\n  renderBBandsIndicator (indicator, data, slot) {\n    const colors = indicator[2]\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const maxP = _max(candlesToRender.map(ohlc => ohlc[3]))\n    const minP = _min(candlesToRender.map(ohlc => ohlc[4]))\n    const pd = maxP - minP\n\n    const topLinePoints = []\n    const middleLinePoints = []\n    const bottomLinePoints = []\n\n    for (let i = 0; i < candlesToRender.length; i += 1) {\n      const d = candlesToRender[i]\n      const [mts] = d\n      const top = ((data[i].top - minP) / pd) * (vpHeight)\n      const middle = ((data[i].middle - minP) / pd) * (vpHeight)\n      const bottom = ((data[i].bottom - minP) / pd) * (vpHeight)\n      const x = (((vWidth - (rightMTS - mts)) / vWidth) * (this.vp.size.w - (this.candleWidthPX / 2)))\n\n      topLinePoints.push({ x, y: vpHeight - top })\n      middleLinePoints.push({ x, y: vpHeight - middle })\n      bottomLinePoints.push({ x, y: vpHeight - bottom })\n    }\n\n    drawLine(this.ohlcCanvas, colors[0], topLinePoints)\n    drawLine(this.ohlcCanvas, colors[1], middleLinePoints)\n    drawLine(this.ohlcCanvas, colors[2], bottomLinePoints)\n  }\n\n  renderRSIIndicator (indicator, data, exSlot) {\n    const color = indicator[2][0]\n    const iInstance = new indicator[0](indicator[1])\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const slotHeight = (this.vp.size.h - vpHeight) / this.externalIndicators\n    const slotY = vpHeight + (slotHeight * exSlot) + CONFIG.AXIS_MARGIN_BOTTOM\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const transformer = dataTransformer(data, vWidth, rightMTS)\n\n    drawTransformedLineFromData(this.indicatorCanvas, color, transformer, {\n      yData: data,\n      xData: candlesToRender.map(c => c[0]),\n\n      ySize: slotHeight,\n      xSize: this.vp.size.w - (this.candleWidthPX / 2),\n\n      yOffset: slotHeight + slotY,\n      xOffset: 0,\n    })\n\n    this.renderExternalSlotMeta(transformer, iInstance.getName(), [30, 70], exSlot)\n  }\n\n  renderMACDIndicator (indicator, data, exSlot) {\n    const colors = indicator[2]\n    const iInstance = new indicator[0](indicator[1])\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const slotHeight = (this.vp.size.h - vpHeight) / this.externalIndicators\n    const slotY = vpHeight + (slotHeight * exSlot) + CONFIG.AXIS_MARGIN_BOTTOM\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const lineKeys = ['macd', 'signal']\n\n    lineKeys.forEach((lineKey, i) => {\n      const color = colors[i]\n      const lineData = data.map(p => p[lineKey])\n      const transformer = dataTransformer(lineData, vWidth, rightMTS)\n\n      drawTransformedLineFromData(this.indicatorCanvas, color, transformer, {\n        yData: lineData,\n        xData: candlesToRender.map(c => c[0]),\n\n        ySize: slotHeight,\n        xSize: this.vp.size.w - (this.candleWidthPX / 2),\n\n        yOffset: slotHeight + slotY,\n        xOffset: 0,\n      })\n\n      if (i === 0) {\n        this.renderExternalSlotMeta(transformer, iInstance.getName(), [0], exSlot)\n      }\n    })\n\n    const maxV = _max(data.map(p => _max([p.macd, p.signal])))\n    const minV = _min(data.map(p => _min([p.macd, p.signal])))\n    const divergenceTransformer = dataTransformer([maxV, minV], vWidth, rightMTS)\n\n    for (let i = 0; i < candlesToRender.length; i += 1) {\n      const mts = candlesToRender[i][0]\n\n      drawTransformedLineFromData(this.indicatorCanvas, colors[2], divergenceTransformer, {\n        yData: [0, data[i].divergence],\n        xData: [mts, mts],\n\n        ySize: slotHeight,\n        xSize: this.vp.size.w - (this.candleWidthPX / 2),\n\n        yOffset: slotHeight + slotY,\n        xOffset: 0,\n      })\n    }\n  }\n\n  renderExternalLineIndicator (indicator, data, exSlot) {\n    const color = indicator[2][0]\n    const iInstance = new indicator[0](indicator[1])\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const slotHeight = (this.vp.size.h - vpHeight) / this.externalIndicators\n    const slotY = vpHeight + (slotHeight * exSlot) + CONFIG.AXIS_MARGIN_BOTTOM\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const transformer = dataTransformer(data, vWidth, rightMTS)\n\n    drawTransformedLineFromData(this.indicatorCanvas, color, transformer, {\n      yData: data,\n      xData: candlesToRender.map(c => c[0]),\n\n      ySize: slotHeight,\n      xSize: this.vp.size.w - (this.candleWidthPX / 2),\n\n      yOffset: slotY + slotHeight,\n      xOffset: 0,\n    })\n\n    this.renderExternalSlotMeta(transformer, iInstance.getName(), [0], exSlot)\n  }\n\n  renderExternalLinesIndicator (indicator, data, exSlot) {\n    const colors = indicator[2]\n    const iInstance = new indicator[0](indicator[1])\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const slotHeight = (this.vp.size.h - vpHeight) / this.externalIndicators\n    const slotY = vpHeight + (slotHeight * exSlot) + CONFIG.AXIS_MARGIN_BOTTOM\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n\n    indicator[0].ui.lines.forEach((lineKey, i) => {\n      const lineData = data.map(p => p[lineKey])\n      const transformer = dataTransformer(lineData, vWidth, rightMTS)\n\n      drawTransformedLineFromData(this.indicatorCanvas, colors[i], transformer, {\n        yData: lineData,\n        xData: candlesToRender.map(c => c[0]),\n\n        ySize: slotHeight,\n        xSize: this.vp.size.w - (this.candleWidthPX / 2),\n\n        yOffset: slotY + slotHeight,\n        xOffset: 0,\n      })\n\n      if (i === 0) {\n        this.renderExternalSlotMeta(transformer, iInstance.getName(), [0], exSlot)\n      }\n    })\n  }\n\n  renderExternalSlotMeta (transformer, label, xAxes, exSlot) {\n    const vpHeight = this.getOHLCVPHeight()\n    const slotHeight = (this.vp.size.h - vpHeight) / this.externalIndicators\n    const slotY = vpHeight + (slotHeight * exSlot) + CONFIG.AXIS_MARGIN_BOTTOM\n    const ctx = this.indicatorCanvas.getContext('2d')\n\n    for (let i = 0; i < xAxes.length; i += 1) {\n      const axis = xAxes[i]\n      const axisY = transformer.y(axis, slotHeight)\n\n      this.drawHorizontalVPLine(this.indicatorCanvas, CONFIG.AXIS_COLOR, slotY + slotHeight - axisY)\n\n      ctx.fillStyle = '#fff'\n      ctx.textAlign = 'left'\n      ctx.fillText(formatAxisTick(axis), this.vp.size.w + 5, slotY + slotHeight - axisY + 3)\n    }\n  }\n\n  renderOverlayLineIndicator (indicator, data, slot) {\n    const color = indicator[2][0]\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const maxP = _max(candlesToRender.map(ohlc => ohlc[3]))\n    const minP = _min(candlesToRender.map(ohlc => ohlc[4]))\n    const pd = maxP - minP\n    const linePoints = []\n\n    for (let i = 0; i < candlesToRender.length; i += 1) {\n      const d = candlesToRender[i]\n      const [mts] = d\n      const y = ((data[i] - minP) / pd) * (vpHeight)\n      const x = (((vWidth - (rightMTS - mts)) / vWidth) * (this.vp.size.w - (this.candleWidthPX / 2)))\n\n      linePoints.push({ x, y: vpHeight - y })\n    }\n\n    drawLine(this.ohlcCanvas, color, linePoints)\n  }\n\n  renderOverlayLinesIndicator (indicator, data, slot) {\n    const colors = indicator[2]\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const maxP = _max(candlesToRender.map(ohlc => ohlc[3]))\n    const minP = _min(candlesToRender.map(ohlc => ohlc[4]))\n    const pd = maxP - minP\n\n    for (let i = 0; i < indicator[0].ui.lines.length; i += 1) {\n      const lineKey = indicator[0].ui.lines[i]\n      const linePoints = []\n\n      for (let j = 0; j < candlesToRender.length; j += 1) {\n        const d = candlesToRender[j]\n        const [mts] = d\n        const y = ((data[j][lineKey] - minP) / pd) * (vpHeight)\n        const x = (((vWidth - (rightMTS - mts)) / vWidth) * (this.vp.size.w - (this.candleWidthPX / 2)))\n\n        linePoints.push({ x, y: vpHeight - y })\n      }\n\n      drawLine(this.ohlcCanvas, colors[i], linePoints)\n    }\n  }\n\n  /**\n   * Renders the crosshair and updates the toolbar OHLC stats\n   */\n  renderCrosshair () {\n    const { width, height, mousePosition } = this\n\n    drawLine(this.crosshairCanvas, CONFIG.CROSSHAIR_COLOR, [\n      { x: 0, y: mousePosition.y + 0.5 },\n      { x: width, y: mousePosition.y + 0.5 },\n    ])\n\n    drawLine(this.crosshairCanvas, CONFIG.CROSSHAIR_COLOR, [\n      { x: mousePosition.x + 0.5, y: 0 },\n      { x: mousePosition.x + 0.5, y: height },\n    ])\n\n    const ctx = this.crosshairCanvas.getContext('2d')\n    const candlesInView = this.getCandlesInView()\n\n    if (candlesInView.length === 0) {\n      return\n    }\n\n    const maxP = _max(candlesInView.map(ohlc => ohlc[3]))\n    const minP = _min(candlesInView.map(ohlc => ohlc[4]))\n    const rightMTS = _last(candlesInView)[0]\n    const leftMTS = candlesInView[0][0]\n    const mtsPerPX = (rightMTS - leftMTS) / this.vp.size.w\n    const pricePerPX = (maxP - minP) / this.getOHLCVPHeight()\n    const mouseMTS = Math.floor(leftMTS + (mtsPerPX * mousePosition.x))\n    const mousePrice = maxP - (pricePerPX * mousePosition.y)\n    const labelX = new Date(mouseMTS).toLocaleString()\n    const labelY = formatAxisTick(mousePrice)\n    const labelXWidth = ctx.measureText(labelX).width\n    const labelYWidth = ctx.measureText(labelY).width\n\n    ctx.textAlign = 'center'\n    ctx.fillStyle = '#ccc'\n    ctx.fillRect(mousePosition.x - (labelXWidth / 2), height - 17, labelXWidth, 14)\n    ctx.fillStyle = '#000'\n    ctx.fillText(labelX, mousePosition.x, height - 5)\n\n    if (mousePosition.y <= this.getOHLCVPHeight()) {\n      ctx.textAlign = 'left'\n      ctx.fillStyle = '#ccc'\n      ctx.fillRect(this.vp.size.w, mousePosition.y, labelYWidth, 14)\n      ctx.fillStyle = '#000'\n      ctx.fillText(labelY, this.vp.size.w, mousePosition.y + 12)\n    }\n\n    // Find nearest candle\n    if (this.onHoveredCandleCB) {\n      const candleDistances = candlesInView.map((c, i) => [\n        Math.abs(c[0] - mouseMTS), i\n      ])\n\n      candleDistances.sort((a, b) => a[0] - b[0])\n\n      this.onHoveredCandleCB(candlesInView[candleDistances[0][1]])\n    }\n  }\n\n  renderDrawings () {\n    for (let i = 0; i < this.drawings.length; i += 1) {\n      this.drawings[i].render()\n    }\n  }\n\n  renderOrders () {\n    if (this.data.length < 2) {\n      return\n    }\n\n    const candles = this.getCandlesInView()\n    const maxP = _max(candles.map(ohlc => ohlc[3]))\n    const minP = _min(candles.map(ohlc => ohlc[4]))\n    const visibleOrders = this.orders.filter(({ price }) => (\n      price >= minP && price <= maxP\n    ))\n\n    if (visibleOrders.length === 0) {\n      return\n    }\n\n    const ctx = this.drawingCanvas.getContext('2d')\n    const transformer = this.getOHLCTransformer()\n\n    visibleOrders.forEach(o => {\n      const color = o.amount < 0 ? CONFIG.FALLING_CANDLE_FILL : CONFIG.RISING_CANDLE_FILL\n      const label = `${formatAxisTick(o.amount)} @ ${formatAxisTick(o.price)}`\n      const labelWidth = ctx.measureText(label).width\n      const y = transformer.y(o.price)\n      const labelX = this.vp.size.w - (CONFIG.MARGIN_RIGHT * 0.5) - labelWidth\n\n      drawLine(this.drawingCanvas, color, [{\n        x: 0,\n        y,\n      }, {\n        x: this.vp.size.w,\n        y,\n      }], true)\n\n      ctx.font = `${CONFIG.AXIS_LABEL_FONT_SIZE_PX} ${CONFIG.AXIS_LABEL_FONT_NAME}`\n      ctx.textAlign = 'left'\n      ctx.fillStyle = color\n      ctx.fillRect(labelX, y - 8, labelWidth + 16, 16)\n      ctx.fillStyle = '#000'\n      ctx.fillText(label, labelX + 8, y + 4)\n    })\n  }\n\n  renderPosition () {\n    if (this.data.length < 2 || !this.position) {\n      return\n    }\n\n    const candles = this.getCandlesInView()\n    const maxP = _max(candles.map(ohlc => ohlc[3]))\n    const minP = _min(candles.map(ohlc => ohlc[4]))\n    const { basePrice, amount } = this.position\n\n    if (basePrice < minP || basePrice > maxP) {\n      return\n    }\n\n    const ctx = this.drawingCanvas.getContext('2d')\n    const transformer = this.getOHLCTransformer()\n    const color = amount < 0 ? CONFIG.FALLING_CANDLE_FILL : CONFIG.RISING_CANDLE_FILL\n    const label = `${formatAxisTick(amount)} @ ${formatAxisTick(basePrice)}`\n    const labelWidth = ctx.measureText(label).width\n    const y = transformer.y(basePrice)\n    const labelX = this.vp.size.w - (CONFIG.MARGIN_RIGHT * 0.5) - labelWidth\n\n    drawLine(this.drawingCanvas, color, [{\n      x: 0,\n      y,\n    }, {\n      x: this.vp.size.w,\n      y,\n    }])\n\n    ctx.font = `${CONFIG.AXIS_LABEL_FONT_SIZE_PX} ${CONFIG.AXIS_LABEL_FONT_NAME}`\n    ctx.textAlign = 'left'\n    ctx.fillStyle = color\n    ctx.fillRect(labelX, y - 8, labelWidth + 16, 16)\n    ctx.fillStyle = '#000'\n    ctx.fillText(label, labelX + 8, y + 4)\n  }\n\n  getMTSForRawX (x) {\n    const candlesInView = this.getCandlesInView()\n    const rightMTS = _last(candlesInView)[0]\n    const leftMTS = candlesInView[0][0]\n    const mtsPerPX = (rightMTS - leftMTS) / this.vp.size.w\n\n    return leftMTS + (mtsPerPX * x)\n  }\n\n  getPriceForRawY (y) {\n    const candlesInView = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const high = _max(candlesInView.map(c => c[3]))\n    const low = _min(candlesInView.map(c => c[4]))\n    const pricePerPX = (high - low) / vpHeight\n\n    return high - (pricePerPX * y)\n  }\n\n  getOHLCTransformer () {\n    const candlesToRender = this.getCandlesInView()\n    const vpHeight = this.getOHLCVPHeight()\n    const rightMTS = _last(candlesToRender)[0]\n    const vWidth = this.viewportWidthCandles * this.dataWidth\n    const maxP = _max(candlesToRender.map(ohlc => ohlc[3]))\n    const minP = _min(candlesToRender.map(ohlc => ohlc[4]))\n    const transformer = dataTransformer([maxP, minP], vWidth, rightMTS)\n\n    transformer.setTargetWidth(this.vp.size.w)\n    transformer.setTargetHeight(vpHeight)\n    transformer.setYModifier(y => vpHeight - y)\n\n    return transformer\n  }\n\n  drawHorizontalVPLine (canvas, color, y) {\n    drawLine(canvas, color, [\n      { x: 0, y },\n      { x: this.vp.size.w, y }\n    ])\n  }\n\n  renderAxis () {\n    const candles = this.getCandlesInView()\n\n    if (candles.length === 0) {\n      return\n    }\n\n    const vpWidth = this.viewportWidthCandles * this.dataWidth\n    const vpHeight = this.getOHLCVPHeight()\n\n    drawXAxis(this.axisCanvas, candles, vpHeight, vpWidth, this.vp.size.w)\n    drawYAxis(this.axisCanvas, candles, this.vp.size.w, this.height, vpHeight)\n  }\n\n  getOHLCVPHeight ()  {\n    return this.vp.size.h - _min([this.vp.size.h / 2, this.externalIndicators * 100])\n  }\n\n  renderOHLC () {\n    const ctx = this.ohlcCanvas.getContext('2d')\n    const candles = this.getCandlesInView()\n\n    if (candles.length === 0) {\n      return\n    }\n\n    const vpHeight = this.getOHLCVPHeight()\n    const vpWidth = this.viewportWidthCandles * this.dataWidth\n\n    drawOHLCSeries(ctx, candles, this.candleWidthPX, vpWidth, vpHeight, this.vp.size.w)\n  }\n\n  renderTrades () {\n    if (this.data.length === 0 || this.trades.length === 0) {\n      return\n    }\n\n    const ctx = this.ohlcCanvas.getContext('2d')\n    const transformer = this.getOHLCTransformer()\n\n    for (let i = 0; i < this.trades.length; i += 1) {\n      ctx.strokeStyle = this.trades[i].amount > 0\n        ? CONFIG.TRADE_MARKER_BUY_COLOR\n        : CONFIG.TRADE_MARKER_SELL_COLOR\n\n      ctx.beginPath()\n      ctx.arc(\n        transformer.x(this.trades[i].mts),\n        transformer.y(this.trades[i].price),\n        CONFIG.TRADE_MARKER_RADIUS_PX,\n        0,\n        2 * Math.PI\n      )\n      ctx.stroke()\n    }\n  }\n\n  getOHLCMousePosition () {\n    return {\n      mts: this.getMTSForRawX(this.mousePosition.x),\n      price: this.getPriceForRawY(this.mousePosition.y),\n    }\n  }\n\n  onMouseLeave () {\n    this.clear(this.crosshairCanvas)\n    this.isDragging = false\n  }\n\n  onMouseUp (e) {\n    this.isDragging = false\n    this.dragStart = null\n\n    this.vp.origin.x += this.vp.pan.x\n    this.vp.origin.y += this.vp.pan.y\n    this.vp.pan.x = 0\n    this.vp.pan.y = 0\n\n    if (this.activeDrawing) {\n      this.activeDrawing.onMouseUp()\n    }\n  }\n\n  onMouseDown (e) {\n    const rect = this.ohlcCanvas.getBoundingClientRect()\n    const x = e.pageX - rect.left\n    const y = e.pageY - rect.top\n\n    // Drawings can prevent drag-start (i.e. when editing)\n    if (this.activeDrawing) {\n      if (this.activeDrawing.onMouseDown(x, y)) {\n        return\n      }\n    }\n\n    this.isDragging = true\n    this.dragStart = { x, y }\n  }\n\n  onMouseMove (e) {\n    const rect = e.target.getBoundingClientRect()\n\n    this.mousePosition = {\n      x: e.pageX - rect.left,\n      y: e.pageY - rect.top\n    }\n\n    if (this.activeDrawing) {\n      this.activeDrawing.onMouseMove(this.mousePosition.x, this.mousePosition.y)\n    }\n\n    this.crosshairCanvas.style.cursor = this.activeDrawing && this.activeDrawing.isActive()\n      ? 'crosshair'\n      : 'default'\n\n    if (this.isDragging && (!this.activeDrawing || !this.activeDrawing.isActive())) {\n      this.vp.pan.x = this.mousePosition.x - this.dragStart.x\n\n      this.clearAll()\n      this.renderAll()\n\n      if (_isFunction(this.onLoadMoreCB)) {\n        const panX = this.vp.pan.x + this.vp.origin.x\n        const candlePanOffset = panX > 0 ? Math.floor(panX / this.candleWidthPX) : 0\n\n        if (candlePanOffset + this.viewportWidthCandles > this.data.length) {\n          this.onLoadMoreCB(this.viewportWidthCandles)\n        }\n      }\n    } else {\n      this.clear(this.crosshairCanvas, 'rgba(0, 0, 0, 0)')\n      this.clear(this.drawingCanvas, 'rgba(0, 0, 0, 0)')\n      this.renderCrosshair()\n      this.renderDrawings()\n      this.renderOrders()\n      this.renderPosition()\n    }\n  }\n\n  onMouseWheel (dx, dy, dz, ev) {\n    // differing values in Chrome/FF, normalize\n    const delta = dy < 0 ? -CONFIG.ZOOM_CANDLE_STEP : CONFIG.ZOOM_CANDLE_STEP\n\n    this.viewportWidthCandles += delta\n\n    if (this.viewportWidthCandles < CONFIG.ZOOM_MIN_LIMIT_CANDLES) {\n      this.viewportWidthCandles = CONFIG.ZOOM_MIN_LIMIT_CANDLES\n    }\n\n    this.candleWidthPX = Math.max(1, 7 - Math.floor(this.viewportWidthCandles / 50))\n\n    this.clearAll()\n    this.renderAll()\n\n    ev.preventDefault()\n    ev.stopPropagation()\n  }\n}\n","import moment from 'moment'\nimport _last from 'lodash/last'\nimport { TIME_FRAME_WIDTHS } from 'bfx-hf-util'\n\nimport drawLine from './line'\nimport CONFIG from '../config'\n\n/**\n * Renders an X-axis at the specified y coord with dynamic tick rendering based\n * on the provided candle dataset.\n *\n * @param {HTML5Canvas} canvas - target canvas to render on\n * @param {Array[]} candles - candle set in bitfinex format\n * @param {number} y - y position of x axis in px\n * @param {number} width - width of x axis in ms (time)\n * @param {number} vpWidth - total viewport width in px\n */\nexport default (canvas, candles, y, width, vpWidth) => {\n  const ctx = canvas.getContext('2d')\n\n  ctx.font = `${CONFIG.AXIS_LABEL_FONT_SIZE_PX} ${CONFIG.AXIS_LABEL_FONT_NAME}`\n  ctx.fillStyle = CONFIG.AXIS_LABEL_COLOR\n  ctx.textAlign = 'center'\n\n  // axis line\n  drawLine(canvas, CONFIG.AXIS_COLOR, [\n    { x: 0, y },\n    { x: vpWidth, y }\n  ])\n\n  // resolve tick width depending on domain\n  const rightMTS = _last(candles)[0]\n  const leftMTS = candles[0][0]\n  const rangeLengthMTS = rightMTS - leftMTS\n  const tickWidthPX = vpWidth / CONFIG.AXIS_X_TICK_COUNT\n  let ticks = []\n\n  let tickDivisor = 60 * 60 * 1000 // 1hr by default, overriden below\n  const dayCount = rangeLengthMTS / TIME_FRAME_WIDTHS['1D']\n\n  if (dayCount > 30) {\n    tickDivisor = 30 * 24 * 60 * 60 * 1000\n  } else if (dayCount > 1) {\n    tickDivisor = 24 * 60 * 60 * 1000\n  } else {\n    const hourCount = rangeLengthMTS / TIME_FRAME_WIDTHS['1h']\n\n    if (hourCount > 1 && hourCount < CONFIG.AXIS_X_TICK_COUNT) {\n      tickDivisor = 60 * 60 * 1000\n    }\n  }\n\n  // generate ticks\n  const paddedLeftMTS = leftMTS - (leftMTS % tickDivisor)\n\n  for (let i = 0; i < (rangeLengthMTS / tickDivisor); i += 1) {\n    ticks.push(paddedLeftMTS + (i * tickDivisor))\n\n    if (paddedLeftMTS + ((i + 1) * tickDivisor) > rightMTS) {\n      break\n    }\n  }\n\n  let previousTick\n\n  // render ticks\n  for (let i = 0; i < ticks.length; i += 1) {\n    const mts = ticks[i] // (tickWidthMTS * i) + leftMTS\n    const tickX = (((width - (rightMTS - mts)) / width) * vpWidth)\n    const tickY = y + CONFIG.AXIS_LABEL_FONT_SIZE_PX + CONFIG.AXIS_LABEL_MARGIN_PX\n    const date = new Date(mts)\n    let label\n\n    if (previousTick && previousTick.getDay() === date.getDay()) {\n      label = moment(date).format('HH:mm')\n    } else {\n      label = moment(date).format('DD/MM')\n    }\n\n    ctx.fillText(label, tickX, tickY, tickWidthPX)\n\n    // tick\n    drawLine(canvas, CONFIG.AXIS_TICK_COLOR, [\n      { x: tickX, y: tickY - CONFIG.AXIS_LABEL_FONT_SIZE_PX },\n      { x: tickX, y: 0 },\n    ])\n\n    previousTick = date\n  }\n}\n","import _max from 'lodash/max'\nimport _min from 'lodash/min'\n\nimport drawLine from './line'\nimport formatAxisTick from '../util/format_axis_tick'\n\nimport CONFIG from '../config'\n\n/**\n * Renders a Y-axis at the specified X coord with dynamic tick rendering based\n * on the provided candle dataset.\n *\n * @param {HTML5Canvas} canvas - target canvas to render on\n * @param {Array[]} candles - candle set in bitfinex format\n * @param {number} x - x position of y axis in px\n * @param {number} height - total axis height in px\n * @param {number} vpHeight - actual viewport height in px\n */\nexport default (canvas, candles, x, height, vpHeight) => {\n  const ctx = canvas.getContext('2d')\n\n  ctx.font = `${CONFIG.AXIS_LABEL_FONT_SIZE_PX} ${CONFIG.AXIS_LABEL_FONT_NAME}`\n  ctx.fillStyle = CONFIG.AXIS_LABEL_COLOR\n  ctx.textAlign = 'left'\n\n  drawLine(canvas, CONFIG.AXIS_COLOR, [\n    { x, y: 0 },\n    { x, y: height },\n  ])\n\n  const maxP = _max(candles.map(ohlc => ohlc[3]))\n  const minP = _min(candles.map(ohlc => ohlc[4]))\n  const pd = maxP - minP\n\n  const tickHeightPX = vpHeight / CONFIG.AXIS_Y_TICK_COUNT\n  const tickHeightPrice = pd / CONFIG.AXIS_Y_TICK_COUNT\n\n  for (let i = 0; i < CONFIG.AXIS_Y_TICK_COUNT; i += 1) {\n    const tickY = vpHeight - (tickHeightPX * i)\n    const tickX = x + CONFIG.AXIS_LABEL_MARGIN_PX\n    const tick = minP + (tickHeightPrice * i)\n\n    ctx.fillText(formatAxisTick(tick), tickX, tickY + (CONFIG.AXIS_LABEL_FONT_SIZE_PX / 2), canvas.width - x)\n\n    // tick\n    drawLine(canvas, CONFIG.AXIS_TICK_COLOR, [\n      { x: tickX - 3, y: tickY },\n      { x: 0, y: tickY },\n    ])\n  }\n}\n","import _last from 'lodash/last'\nimport _max from 'lodash/max'\nimport _min from 'lodash/min'\nimport CONFIG from '../config'\n\n/**\n * Renders a series of candles on the target 2D context, using the specified\n * viewport dimensions (scaled appropriately)\n *\n * @param {Context2D} ctx - target rendering context\n * @param {Array[]} candles - candles in bitfinex format\n * @param {number} candleWidth - width of each candle in px\n * @param {number} targetWidth - candle viewport width in px\n * @param {number} targetHeight - candle viewport height in px\n * @param {number} vpWidth - actual viewport width in px\n */\nexport default (ctx, candles, candleWidth, targetWidth, targetHeight, vpWidth) => {\n  const rightMTS = _last(candles)[0]\n  const maxVol = _max(candles.map(ohlc => ohlc[5]))\n  const maxP = _max(candles.map(ohlc => ohlc[3]))\n  const minP = _min(candles.map(ohlc => ohlc[4]))\n  const pd = maxP - minP\n\n  for (let i = 0; i < candles.length; i += 1) {\n    const d = candles[i]\n    const [mts, o, c, h, l, v] = d\n\n    const oPX = ((o - minP) / pd) * targetHeight\n    const hPX = ((h - minP) / pd) * targetHeight\n    const lPX = ((l - minP) / pd) * targetHeight\n    const cPX = ((c - minP) / pd) * targetHeight\n\n    const x = (((targetWidth - (rightMTS - mts)) / targetWidth) * (vpWidth - (candleWidth / 2)))\n    const y = targetHeight - _max([oPX, cPX])\n\n    // volume\n    ctx.fillStyle = c >= o\n      ? CONFIG.RISING_VOL_FILL\n      : CONFIG.FALLING_VOL_FILL\n\n    ctx.fillRect(\n      x - (candleWidth / 2),\n      targetHeight,\n      candleWidth,\n      -((v / maxVol) * targetHeight)\n    )\n\n    ctx.fillStyle = c >= o ? CONFIG.RISING_CANDLE_FILL : CONFIG.FALLING_CANDLE_FILL\n    ctx.strokeStyle = ctx.fillStyle\n\n    // body\n    ctx[c >= o ? 'strokeRect' : 'fillRect'](\n      x - (candleWidth / 2),\n      y,\n      candleWidth,\n      _max([oPX, cPX]) - _min([oPX, cPX])\n    )\n\n    // wicks\n    ctx.beginPath()\n    ctx.moveTo(x, targetHeight - _max([oPX, cPX]))\n    ctx.lineTo(x, targetHeight - hPX)\n    ctx.stroke()\n    ctx.closePath()\n\n    ctx.beginPath()\n    ctx.moveTo(x, targetHeight - _min([oPX, cPX]))\n    ctx.lineTo(x, targetHeight - lPX)\n    ctx.stroke()\n    ctx.closePath()\n  }\n}\n","import _get from 'lodash/get'\nimport _set from 'lodash/set'\n\nimport distance from '../util/distance'\n\nconst PROXIMITY_LIMIT_PX = 7\n\nexport default class Drawing {\n  constructor (chart, anchors = []) {\n    this.chart = chart\n    this.anchors = anchors\n    this.active = true\n\n    this.anchors.forEach((a) => {\n      a.moving = false\n      a.render = false\n    })\n  }\n\n  isActive () {\n    return this.active\n  }\n\n  render () {}\n\n  renderAnchors () {\n    const ctx = this.chart.drawingCanvas.getContext('2d')\n    const transformer = this.chart.getOHLCTransformer()\n\n    ctx.strokeStyle = '#fff'\n\n    this.anchors.forEach((a) => {\n      if (!a.render) {\n        return\n      }\n\n      const anchorX = a.keyX === '__mouse'\n        ? this.lastMouseX\n        : transformer.x(_get(this, a.keyX))\n\n      const anchorY = a.keyY === '__mouse'\n        ? this.lastMouseY\n        : transformer.y(_get(this, a.keyY))\n\n      ctx.beginPath()\n      ctx.arc(anchorX, anchorY, PROXIMITY_LIMIT_PX, 0, 2 * Math.PI)\n      ctx.stroke()\n    })\n  }\n\n  onMouseUp () {\n    this.anchors.forEach(a => a.moving = false)\n  }\n\n  onMouseDown (x, y) {\n    let hasMovingAnchor = false\n\n    this.anchors.forEach((a) => {\n      a.moving = a.render\n\n      if (a.moving) {\n        hasMovingAnchor = true\n      }\n    })\n\n    return hasMovingAnchor\n  }\n\n  onMouseMove (x, y) {\n    this.lastMouseX = x\n    this.lastMouseY = y\n\n    const transformer = this.chart.getOHLCTransformer()\n\n    this.anchors.forEach((a) => {\n      const anchorX = a.keyX === '__mouse'\n        ? this.lastMouseX\n        : transformer.x(_get(this, a.keyX))\n\n      const anchorY = a.keyY === '__mouse'\n        ? this.lastMouseY\n        : transformer.y(_get(this, a.keyY))\n\n      a.render = distance(x, y, anchorX, anchorY) < PROXIMITY_LIMIT_PX\n\n      if (a.moving) {\n        if (a.keyX !== '__mouse') {\n          _set(this, a.keyX, this.chart.getMTSForRawX(x))\n        }\n\n        if (a.keyY !== '__mouse') {\n          _set(this, a.keyY, this.chart.getPriceForRawY(y))\n        }\n      }\n    })\n  }\n}\n","/**\n * Returns the distance between two points\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number} distance\n */\nexport default (x1, y1, x2, y2) => {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n}\n","import drawLine from '../draw/line'\nimport Drawing from './drawing'\n\nexport default class LineDrawing extends Drawing {\n  constructor (chart) {\n    super(chart, [{\n      keyX: 'start.mts',\n      keyY: 'start.price',\n    }, {\n      keyX: 'end.mts',\n      keyY: 'end.price',\n    }])\n\n    this.start = null\n    this.end = null\n  }\n\n  onMouseDown (x, y) {\n    const mts = this.chart.getMTSForRawX(x)\n    const price = this.chart.getPriceForRawY(y)\n\n    if (this.active) {\n      if (!this.start) {\n        this.start = { mts, price }\n      } else {\n        this.end = { mts, price }\n        this.active = false\n      }\n    }\n\n    return super.onMouseDown(x, y)\n  }\n\n  render () {\n    if (!this.start) {\n      return\n    }\n\n    const transformer = this.chart.getOHLCTransformer()\n    const linePoints = []\n\n    linePoints.push(transformer.point(this.start))\n\n    if (!this.end) {\n      linePoints.push(transformer.point(this.chart.getOHLCMousePosition()))\n    } else {\n      linePoints.push(transformer.point(this.end))\n    }\n\n    drawLine(this.chart.drawingCanvas, '#fff', linePoints)\n\n    this.renderAnchors()\n  }\n}\n","import Drawing from './drawing'\n\nexport default class HorizontalLineDrawing extends Drawing {\n  constructor (chart) {\n    super(chart, [{\n      keyX: '__mouse',\n      keyY: 'price',\n    }])\n\n    this.price = null\n  }\n\n  onMouseDown (x, y) {\n    if (this.active) {\n      this.price = this.chart.getPriceForRawY(y)\n      this.active = false\n    }\n\n    return super.onMouseDown(x, y)\n  }\n\n  render () {\n    if (!this.price) {\n      return\n    }\n\n    const ctx = this.chart.drawingCanvas.getContext('2d')\n    const transformer = this.chart.getOHLCTransformer()\n    const y = transformer.y(this.price)\n\n    ctx.strokeStyle = '#fff'\n    ctx.beginPath()\n    ctx.moveTo(0, y)\n    ctx.lineTo(this.chart.vp.size.w, y)\n    ctx.stroke()\n\n    this.renderAnchors()\n  }\n}\n","import Drawing from './drawing'\n\nexport default class VerticalLineDrawing extends Drawing {\n  constructor (chart) {\n    super(chart, [{\n      keyX: 'mts',\n      keyY: '__mouse',\n    }])\n\n    this.mts = null\n  }\n\n  onMouseDown (x, y) {\n    if (this.active) {\n      this.mts = this.chart.getMTSForRawX(x)\n      this.active = false\n    }\n\n    return super.onMouseDown(x, y)\n  }\n\n  render () {\n    if (!this.mts) {\n      return\n    }\n\n    const ctx = this.chart.drawingCanvas.getContext('2d')\n    const transformer = this.chart.getOHLCTransformer()\n    const x = transformer.x(this.mts)\n\n    ctx.beginPath()\n    ctx.moveTo(x, 0)\n    ctx.lineTo(x, this.chart.vp.size.h)\n    ctx.stroke()\n\n    this.renderAnchors()\n  }\n}\n","import drawLine from '../draw/line'\nimport Drawing from './drawing'\n\nexport default class ParallelLineDrawing extends Drawing {\n  constructor (chart) {\n    super(chart, [{\n      keyX: 'start.mts',\n      keyY: 'start.price',\n    }, {\n      keyX: 'end.mts',\n      keyY: 'end.price',\n    }, {\n      keyX: 'parallel.mts',\n      keyY: 'parallel.price',\n    }])\n\n    this.start = null\n    this.end = null\n    this.parallel = null\n  }\n\n  onMouseDown (x, y) {\n    const mts = this.chart.getMTSForRawX(x)\n    const price = this.chart.getPriceForRawY(y)\n\n    if (this.active) {\n      if (this.end && this.start) {\n        this.parallel = { mts, price }\n        this.active = false\n      } else if (!this.start) {\n        this.start = { mts, price }\n      } else {\n        this.end = { mts, price }\n      }\n    }\n\n    return super.onMouseDown(x, y)\n  }\n\n  render () {\n    if (!this.start) {\n      return\n    }\n\n    const linePoints = []\n    const transformer = this.chart.getOHLCTransformer()\n    const start = transformer.point(this.start)\n    const end = this.end\n      ? transformer.point(this.end)\n      : transformer.point(this.chart.getOHLCMousePosition())\n    const m = (end.y - start.y) / (end.x - start.x)\n    const b = start.y - (m * start.x)\n\n    linePoints.push({\n      x: 0,\n      y: b,\n    })\n\n    linePoints.push({\n      x: this.chart.vp.size.w,\n      y: (m * this.chart.vp.size.w) + b,\n    })\n\n    drawLine(this.chart.drawingCanvas, '#fff', linePoints)\n\n    if (this.start && this.end) {\n      const pLinePoints = []\n      const parallel = this.parallel\n        ? transformer.point(this.parallel)\n        : transformer.point(this.chart.getOHLCMousePosition())\n      const pB = parallel.y - (m * parallel.x)\n\n      pLinePoints.push({\n        x: 0,\n        y: pB,\n      })\n\n      pLinePoints.push({\n        x: this.chart.vp.size.w,\n        y: (m * this.chart.vp.size.w) + pB,\n      })\n\n      drawLine(this.chart.drawingCanvas, '#fff', pLinePoints)\n    }\n\n    this.renderAnchors()\n  }\n}\n","import LoadingBeeSpinner from './LoadingBeeSpinner'\nexport default LoadingBeeSpinner\n","import React from 'react'\nimport './LoadingBeeSpinner.css'\n\nexport default class LoadingBeeSpinner extends React.PureComponent {\n  render () {\n    const { top } = this.props\n\n    return (\n      <div className='loader-wrapper' style={{ top: `${top}px` }}>\n        <div className='loader-container'>\n          <svg\n            version='1.1'\n            id='loader-bee'\n            className='loader-bee'\n            xmlns='http://www.w3.org/2000/svg'\n            xmlnsXlink='http://www.w3.org/1999/xlink'\n            x='0px'\n            y='0px'\n            viewBox='0 0 68.5 68.5'\n            enableBackground='new 0 0 68.5 68.5'\n            xmlSpace='preserve'\n          >\n            <g id='loader-group'>\n              <path className='circle circle-8' opacity='0.6' d='M43.577,12.847c0.515,0.202,0.777,0.685,0.552,1.19l0,0c-0.233,0.504-0.8,0.655-1.297,0.425\n                l0,0c-0.508-0.227-0.768-0.718-0.542-1.224l0,0c0.227-0.486,0.745-0.603,1.235-0.41l0,0C43.545,12.835,43.563,12.843,43.577,12.847\n                z'/>\n              <path className='circle circle-7' opacity='0.65' d='M39.24,12.06c-0.103,0.541-0.634,0.892-1.178,0.78l0,0\n                c-0.541-0.103-0.893-0.634-0.783-1.171l0,0c0.105-0.546,0.635-0.891,1.175-0.789l0,0l0,0l0,0c0.061,0.009,0.116,0.032,0.166,0.052\n                l0,0C39.068,11.104,39.342,11.577,39.24,12.06z'/>\n              <path className='circle circle-9' opacity='0.55' d='M48.391,15.418c0.433,0.341,0.518,0.97,0.175,1.409l0,0\n                c-0.334,0.436-0.967,0.512-1.41,0.175l0,0c-0.432-0.341-0.508-0.973-0.174-1.408l0,0c0.282-0.355,0.757-0.472,1.154-0.316l0,0\n                C48.224,15.312,48.311,15.362,48.391,15.418z'/>\n              <path className='circle circle-6' opacity='0.7' d='M34.015,11.407c0.015,0.549-0.417,1.012-0.968,1.033l0,0\n                c-0.554,0.021-1.016-0.41-1.037-0.963l0,0c-0.021-0.553,0.41-1.015,0.963-1.036l0,0c0.146-0.008,0.279,0.016,0.404,0.065l0,0\n                C33.738,10.646,33.998,10.991,34.015,11.407z'/>\n              <path className='circle circle-10' opacity='0.5' d='M52.307,19.282L52.307,19.282L52.307,19.282c0.349,0.431,0.281,1.062-0.154,1.408l0,0\n                c-0.43,0.348-1.059,0.275-1.409-0.155l0,0c-0.346-0.436-0.273-1.059,0.155-1.408l0,0c0.291-0.231,0.666-0.277,0.99-0.152l0,0\n                C52.05,19.039,52.199,19.139,52.307,19.282z'/>\n              <path className='circle circle-5' opacity='0.75' d='M28.77,11.976c0.152,0.532-0.163,1.083-0.695,1.234l0,0\n                c-0.531,0.15-1.082-0.164-1.232-0.696l0,0c-0.148-0.538,0.166-1.089,0.695-1.234l0,0c0.219-0.065,0.44-0.043,0.633,0.032l0,0\n                C28.456,11.424,28.687,11.657,28.77,11.976z'/>\n              <path className='circle circle-11' opacity='0.45' d='M55.227,23.939c0.242,0.501,0.029,1.099-0.47,1.334l0,0c-0.502,0.241-1.1,0.029-1.335-0.47\n                l0,0c-0.234-0.5-0.022-1.097,0.471-1.334l0,0c0.263-0.127,0.549-0.123,0.797-0.026l0,0C54.914,23.529,55.113,23.7,55.227,23.939z'\n                />\n              <path className='circle circle-4' opacity='0.8' d='M23.805,13.744c0.27,0.484,0.088,1.094-0.394,1.358l0,0\n                c-0.489,0.261-1.095,0.088-1.362-0.402l0,0c-0.263-0.482-0.092-1.089,0.399-1.356l0,0l0,0l0,0c0.265-0.148,0.579-0.162,0.845-0.051\n                l0,0C23.504,13.375,23.689,13.527,23.805,13.744z'/>\n              <path className='circle circle-12' opacity='0.4' d='M57.002,29.143c0.119,0.541-0.225,1.073-0.767,1.191l0,0\n                c-0.54,0.119-1.078-0.228-1.189-0.765l0,0c-0.12-0.541,0.224-1.073,0.764-1.191l0,0c0.204-0.042,0.396-0.025,0.578,0.045l0,0\n                C56.687,28.54,56.929,28.805,57.002,29.143z'/>\n              <path  className='circle circle-3' opacity='0.85' d='M19.373,16.601c0.372,0.41,0.34,1.042-0.07,1.412l0,0c-0.416,0.368-1.048,0.336-1.418-0.073\n                l0,0c-0.368-0.417-0.33-1.046,0.08-1.416l0,0c0.287-0.26,0.689-0.318,1.031-0.185l0,0C19.133,16.392,19.264,16.479,19.373,16.601z'\n                />\n              <path className='circle circle-13' opacity='0.35' d='M57.314,34.53c0,0,0,0-0.001,0.006l0,0c-0.187,0.479-0.363,1.033-0.917,1.019l0,0\n                c-0.55-0.007-0.937-0.451-0.924-0.998l0,0c0.009-0.556,0.493-0.983,1.049-0.974l0,0c0.121,0.002,0.146-0.009,0.249,0.033l0,0\n                C57.151,33.766,57.461,34.157,57.314,34.53z'/>\n              <path className='circle circle-2' opacity='0.9' d='M15.722,20.401c0.458,0.313,0.572,0.939,0.259,1.396l0,0\n                c-0.312,0.452-0.938,0.567-1.395,0.252l0,0c-0.453-0.312-0.57-0.932-0.255-1.389l0,0l0,0l0,0c0.267-0.39,0.767-0.532,1.189-0.367\n                l0,0C15.588,20.32,15.658,20.361,15.722,20.401z'/>\n              <path className='circle circle-14' opacity='0.3' d='M56.776,40.066c-0.144,0.532-0.692,0.854-1.228,0.719l0,0\n                c-0.529-0.143-0.853-0.692-0.715-1.227l0,0c0.142-0.532,0.69-0.854,1.221-0.712l0,0c0.041,0.008,0.078,0.023,0.116,0.037l0,0\n                C56.638,39.066,56.906,39.572,56.776,40.066z'/>\n              <path className='circle circle-1' opacity='0.95' d='M13.934,26.366L13.934,26.366c-0.006,0.012-0.008,0.019-0.014,0.031l0,0\n                c-0.004,0.012-0.011,0.03-0.019,0.05l0,0c-0.2,0.517-0.773,0.773-1.293,0.577l0,0c-0.515-0.201-0.776-0.782-0.574-1.298l0,0l0,0\n                l0,0c0.004-0.013,0.007-0.019,0.011-0.032l0,0c0.008-0.019,0.016-0.037,0.022-0.055l0,0c0.202-0.516,0.78-0.771,1.297-0.57l0,0\n                C13.881,25.27,14.133,25.85,13.934,26.366z'/>\n              <rect x='13.591' y='26.326' opacity='0.95' width='0' height='0'/>\n              <path className='circle circle-15' opacity='0.25' d='M54.37,43.835c0.49,0.263,0.679,0.867,0.417,1.351l0,0c-0.257,0.495-0.86,0.682-1.354,0.425\n                l0,0c-0.485-0.261-0.674-0.865-0.419-1.352l0,0c0.243-0.458,0.785-0.654,1.253-0.473l0,0C54.303,43.802,54.332,43.82,54.37,43.835z\n                '/>\n              <path className='circle circle-16' opacity='0.2' d='M51.577,48.313c0.418,0.363,0.464,0.997,0.102,1.414l0,0\n                c-0.368,0.415-1.002,0.455-1.419,0.092l0,0c-0.411-0.361-0.458-0.996-0.095-1.413l0,0c0.292-0.323,0.737-0.422,1.118-0.274l0,0\n                C51.388,48.174,51.493,48.236,51.577,48.313z'/>\n              <path className='circle circle-17' opacity='0.15' d='M47.834,52.019c0.316,0.452,0.21,1.077-0.237,1.397l0,0\n                c-0.454,0.317-1.079,0.216-1.397-0.237l0,0c-0.32-0.447-0.214-1.071,0.233-1.392l0,0c0.288-0.203,0.646-0.236,0.948-0.118l0,0\n                C47.557,51.737,47.71,51.855,47.834,52.019z'/>\n              <path className='circle circle-18' opacity='0.1' d='M43.327,54.759c0.208,0.512-0.034,1.098-0.546,1.307l0,0\n                c-0.52,0.207-1.104-0.036-1.307-0.545l0,0c-0.206-0.517,0.033-1.097,0.545-1.307l0,0c0.249-0.103,0.513-0.101,0.741-0.011l0,0\n                C43.01,54.301,43.221,54.496,43.327,54.759z'/>\n              <path className='circle circle-19' opacity='0.05' d='M38.318,56.396c0.08,0.547-0.291,1.055-0.834,1.144l0,0\n                c-0.549,0.087-1.063-0.286-1.148-0.835l0,0c-0.081-0.547,0.289-1.055,0.838-1.141l0,0c0.178-0.031,0.355-0.012,0.518,0.05l0,0\n                C38.015,55.74,38.26,56.03,38.318,56.396z'/>\n              <path className='circle circle-20' opacity='0.02' d='M33.062,56.832c-0.043,0.55-0.526,0.963-1.076,0.921l0,0\n                c-0.548-0.043-0.962-0.526-0.919-1.076l0,0c0.045-0.556,0.525-0.962,1.074-0.92l0,0c0.105,0.005,0.197,0.026,0.29,0.063l0,0\n                C32.83,55.976,33.102,56.382,33.062,56.832z'/>\n              <path className='bee-icon' d='M24.713,34.872c-0.08-0.312-3.092-0.897-5.703,3.527c-2.611,4.423-0.702,5.55-0.702,5.55\n                s2.323,1.681,5.55-3.29C26.793,36.137,24.713,34.872,24.713,34.872 M15.07,38.639l-0.007,0.003c-0.005,0-0.006,0.002-0.008,0.003\n                c-0.003,0-0.007,0-0.011,0.001l-0.008,0.002c-1.556,0.378-2.276,0.974-2.276,0.974c1.013,0.538,2.03,1.653,2.03,1.653l0.871-0.238\n                l0.011-0.002l0.006-0.003l0.878-0.211c0,0,0.352-1.467,0.977-2.428C17.533,38.393,16.614,38.221,15.07,38.639 M4.772,40.009\n                c0,0-1.206,2.113,3.548,4.652c5.229,2.792,6.447,0.199,6.447,0.199s1.127-1.91-3.293-4.518C7.049,37.729,4.694,39.696,4.772,40.009\n                M15.41,49.819c0.648-0.167,1.04-0.829,0.873-1.478s-0.829-1.038-1.478-0.872c-0.647,0.168-1.038,0.829-0.872,1.477\n                C14.101,49.595,14.764,49.985,15.41,49.819 M20.143,48.599c0.647-0.165,1.041-0.828,0.873-1.476\n                c-0.168-0.65-0.832-1.039-1.479-0.872c-0.647,0.169-1.039,0.828-0.872,1.477C18.832,48.376,19.494,48.767,20.143,48.599\n                M25.561,40.32c-1.256,2.5-3.408,4.083-4.17,4.487c0,0-0.059,0-0.055,0.12c0,0.124-0.016,0.472-0.016,0.472\n                s-0.014,0.033,0.041,0.074c0.055,0.044,0.658,0.411,0.895,1.33c0.236,0.918,0.012,2.572-2.132,3.123c0,0-0.012,0.004-0.052,0.072\n                c-0.039,0.07-0.766,1.224-1.709,1.468v0.003c-0.002,0-0.004-0.002-0.004-0.002c-0.004,0.001-0.002,0.003-0.002,0.003l-0.002-0.001\n                c-0.945,0.241-2.141-0.419-2.209-0.46c-0.067-0.041-0.082-0.038-0.082-0.038c-2.141,0.551-3.137-0.786-3.374-1.705\n                c-0.237-0.919,0.116-1.533,0.141-1.598c0.027-0.062,0-0.083,0-0.083s-0.183-0.297-0.239-0.407\n                c-0.057-0.106-0.107-0.078-0.107-0.078c-0.86,0.015-3.514-0.331-5.817-1.916c-2.304-1.581-2.972-2.884-3.233-3.904\n                c-0.264-1.02,0.016-2.775,2.189-3.335c2.175-0.56,4.617,0.442,4.617,0.442c0.072,0.032,0.102-0.02,0.102-0.02\n                c1.38-1.921,3.828-2.461,3.999-2.498c0.165-0.051,2.572-0.762,4.704,0.256c0,0,0.052,0.028,0.1-0.033c0,0,1.654-2.057,3.828-2.619\n                c2.178-0.56,3.268,0.84,3.529,1.86C26.764,36.359,26.812,37.822,25.561,40.32 M18.047,34.639c0,0-1.651-0.673-4.039-0.061\n                c-2.388,0.618-3.509,2.007-3.509,2.007c-0.088,0.106-0.104,0.012-0.104,0.012c-0.242-0.944-0.24-1.435,0.484-2.537\n                c0.699-1.064,2.465-1.548,2.584-1.582c0,0,0.002,0,0.004-0.001l0.004-0.001c0.121-0.029,1.898-0.455,3.027,0.137\n                c1.165,0.613,1.403,1.042,1.646,1.986C18.145,34.601,18.178,34.691,18.047,34.639 M15.105,31.604c0,0-0.814-0.297-1.869-0.027\n                l-0.205-0.79l0.199,0.791c-1.056,0.271-1.622,0.927-1.622,0.927c-0.208,0.161-0.166-0.064-0.166-0.064\n                c0.188-1.983,1.271-2.482,1.363-2.519l-0.002-0.004l0.003,0.002c0.002-0.003,0.004-0.005,0.004-0.005l0.002,0.006\n                c0.096-0.011,1.283-0.101,2.408,1.545C15.223,31.468,15.365,31.645,15.105,31.604'/>\n            </g>\n          </svg>\n        </div>\n      </div>\n    )\n  }\n}\n","import IndicatorSettingsModal from './IndicatorSettingsModal'\nexport default IndicatorSettingsModal\n","import React from 'react'\nimport _isFinite from 'lodash/isFinite'\nimport _isString from 'lodash/isString'\nimport './IndicatorSettingsModal.css'\n\nexport default class IndicatorSettingsModal extends React.PureComponent {\n  state = {\n    values: []\n  }\n\n  constructor (props) {\n    super(props)\n\n    const { settings = {} } = this.props\n    const { argsDef, args = [] } = settings\n\n    this.state.values = args.map((arg, i) => (\n      _isFinite(arg) || _isString(arg) ? arg : argsDef[i].default\n    ))\n\n    this.onValueChange = this.onValueChange.bind(this)\n    this.onSave = this.onSave.bind(this)\n  }\n\n  onValueChange (index, value) {\n    this.setState(({ values }) => {\n      const nextValues = [...values]\n      nextValues[index] = _isFinite(+value) ? +value : value\n      return { values: nextValues }\n    })\n  }\n\n  onSave () {\n    const { onSave } = this.props\n    const { values } = this.state\n    onSave(values)\n  }\n\n  render () {\n    const { values } = this.state\n    const { onClose, onDelete, settings = {} } = this.props\n    const { name, argsDef, args = [] } = settings\n\n    return (\n      <div className='bfxc__indicatorsettingsmodal-outer'>\n        <div className='bfxc__indicatorsettingsmodal-wrapper'>\n          <p className='bfxc__indicatorsettingsmodal-title'>\n            {name} Settings\n\n            {/* TODO: support multiple colors\n            <span\n              className='bfxc__indicatorsettingsmodal-color'\n              style={{\n                backgroundColor: args.__color,\n              }}\n            />\n            */}\n          </p>\n\n          <ul className='bfxc__indicatorsettingsmodal-settings'>\n            {args.map((arg, i) => (\n              <li>\n                <p>{argsDef[i].label}</p>\n\n                <input\n                  type='text'\n                  value={values[i]}\n                  onChange={e => this.onValueChange(i, e.target.value)}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <ul className='bfxc__indicatorsettingsmodal-actions'>\n            <li>\n              <button onClick={onClose}>Close</button>\n            </li>\n\n            <li>\n              <button onClick={onDelete} className='red'>Delete</button>\n            </li>\n\n            <li>\n              <button onClick={this.onSave} className='green'>Save</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n","import Chart from './Chart'\nexport default Chart\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { TIME_FRAME_WIDTHS } from 'bfx-hf-util'\nimport HFI from 'bfx-hf-indicators'\nimport randomColor from 'randomcolor'\n\nimport Dropdown from '../Dropdown'\nimport ChartLib from './lib/chart'\nimport formatAxisTick from './lib/util/format_axis_tick'\nimport LineDrawing from './lib/drawings/line'\nimport HorizontalLineDrawing from './lib/drawings/horizontal_line'\nimport VerticalLineDrawing from './lib/drawings/vertical_line'\nimport ParallelLineDrawing from './lib/drawings/parallel_lines'\nimport LoadingBeeSpinner from '../LoadingBeeSpinner'\nimport IndicatorSettingsModal from '../IndicatorSettingsModal'\n\nimport './Chart.css'\nimport './icon_font/styles.css'\n\nconst TOPBAR_HEIGHT = 45\nconst TOOLBAR_HEIGHT = 45\n\nexport default class Chart extends React.Component {\n  state = {\n    hoveredCandle: null,\n    indicatorSettings: [],\n\n    settingsModalOpen: false,\n    settingsModalIndicatorIndex: -1,\n\n    isFullscreen: false,\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.onHoveredCandle = this.onHoveredCandle.bind(this)\n    this.onCloseIndicatorSettings = this.onCloseIndicatorSettings.bind(this)\n    this.onOpenIndicatorSettings = this.onOpenIndicatorSettings.bind(this)\n    this.onUpdateIndicatorSettings = this.onUpdateIndicatorSettings.bind(this)\n    this.onSaveIndicatorSettings = this.onSaveIndicatorSettings.bind(this)\n    this.onToggleFullscreen = this.onToggleFullscreen.bind(this)\n    this.onFullscreenExit = this.onFullscreenExit.bind(this)\n\n    this.wrapperRef = React.createRef()\n    this.ohlcCanvasRef = React.createRef()\n    this.axisCanvasRef = React.createRef()\n    this.drawingCanvasRef = React.createRef()\n    this.indicatorCanvasRef = React.createRef()\n    this.crosshairCanvasRef = React.createRef()\n    this.chart = null\n  }\n\n  componentDidMount () {\n    const {\n      width, height, onLoadMore, indicators, candles, candleWidth, trades,\n      config, onTimeFrameChange, orders, position, marketLabel,\n    } = this.props\n\n    document.addEventListener('fullscreenchange', this.onFullscreenExit, false)\n    document.addEventListener('mozfullscreenchange', this.onFullscreenExit, false)\n    document.addEventListener('MSFullscreenChange', this.onFullscreenExit, false)\n    document.addEventListener('webkitfullscreenchange', this.onFullscreenExit, false)\n\n    const ohlcCanvas = this.ohlcCanvasRef.current\n    const axisCanvas = this.axisCanvasRef.current\n    const drawingCanvas = this.drawingCanvasRef.current\n    const indicatorCanvas = this.indicatorCanvasRef.current\n    const crosshairCanvas = this.crosshairCanvasRef.current\n\n    if (\n      !ohlcCanvas || !axisCanvas || !drawingCanvas || !indicatorCanvas ||\n      !crosshairCanvas\n    ) {\n      console.error('mounted without all canvases!')\n      return\n    }\n\n    if (this.chart) {\n      console.error('chart library initialized before mount!')\n      return\n    }\n\n    this.chart = new ChartLib({\n      ohlcCanvas,\n      axisCanvas,\n      drawingCanvas,\n      indicatorCanvas,\n      crosshairCanvas,\n      indicators,\n      onLoadMoreCB: onLoadMore,\n      onTimeFrameChangeCB: onTimeFrameChange,\n      onHoveredCandleCB: this.onHoveredCandle,\n      onUpdateIndicatorSettingsCB: this.onUpdateIndicatorSettings,\n      data: candles,\n      dataKey: `${marketLabel}${candleWidth}`,\n      dataWidth: candleWidth,\n      trades,\n      orders,\n      position,\n      width,\n      height: height - this.getTopReservedSpace(),\n      config,\n    })\n  }\n\n  componentDidUpdate (prevProps) {\n    const { isFullscreen } = this.state\n    const {\n      candles, width, height, trades, indicators, drawings, candleWidth, orders,\n      position, disableToolbar, disableTopbar, marketLabel\n    } = this.props\n\n    if (candles !== prevProps.candles || candleWidth !== prevProps.candleWidth) {\n      this.chart.updateData(candles, candleWidth, `${marketLabel}${candleWidth}`)\n    }\n\n    if (\n      (width !== prevProps.width) ||\n      (height !== prevProps.height) ||\n      (disableToolbar !== prevProps.disableToolbar) ||\n      (disableTopbar !== prevProps.disableTopbar)\n    ) {\n      if (isFullscreen) {\n        this.chart.updateDimensions(window.innerWidth, this.getChartHeight())\n      } else {\n        this.chart.updateDimensions(width, this.getChartHeight())\n      }\n    }\n\n    if (trades !== prevProps.trades) {\n      this.chart.updateTrades(trades)\n    }\n\n    if (indicators !== prevProps.indicators) {\n      this.chart.updateIndicators(indicators)\n    }\n\n    if (drawings !== prevProps.drawings) {\n      this.chart.updateDrawings(drawings)\n    }\n\n    if (orders !== prevProps.orders) {\n      this.chart.updateOrders(orders)\n    }\n\n    if (position !== prevProps.position) {\n      this.chart.updatePosition(position)\n    }\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('fullscreenchange', this.onFullscreenExit)\n    document.removeEventListener('mozfullscreenchange', this.onFullscreenExit)\n    document.removeEventListener('MSFullscreenChange', this.onFullscreenExit)\n    document.removeEventListener('webkitfullscreenchange', this.onFullscreenExit)\n  }\n\n  onHoveredCandle (hoveredCandle) {\n    this.setState(() => ({ hoveredCandle }))\n  }\n\n  /**\n   * @param {Array[]} indicators - array of [iClass, args]\n   * @param {number} ohlcVPHeight - height of OHLC viewport\n   * @param {number} slotHeight - external indicator slot height\n   */\n  onUpdateIndicatorSettings (indicators, slotHeight) {\n    const extCount = indicators\n      .filter(([ Class ]) => Class.ui.position === 'external')\n      .length\n\n    let currentExtSlot = 0\n    let currentOverlaySlot = 0\n\n    const indicatorSettings = indicators.map(([ Class, args, colors ]) => {\n      const { ui } = Class\n      const { position } = ui\n\n      return {\n        args,\n        argsDef: Class.args,\n        position,\n        colors,\n        name: new Class(args).getName(),\n        bottom: position !== 'external'\n          ? (slotHeight * extCount) + 82 + (32 * currentOverlaySlot++)\n          : (slotHeight * (extCount - ++currentExtSlot)) + slotHeight\n      }\n    })\n\n    this.setState(() => ({ indicatorSettings }))\n  }\n\n  onOpenIndicatorSettings (index) {\n    this.setState(() => ({\n      settingsModalOpen: true,\n      settingsModalIndicatorIndex: index,\n    }))\n  }\n\n  onCloseIndicatorSettings () {\n    this.setState(() => ({\n      settingsModalOpen: false,\n      settingsModalIndicatorIndex: -1,\n    }))\n  }\n\n  onSaveIndicatorSettings (args) {\n    const { onUpdateIndicatorArgs } = this.props\n    const { settingsModalIndicatorIndex } = this.state\n\n    onUpdateIndicatorArgs(args, settingsModalIndicatorIndex)\n    this.onCloseIndicatorSettings()\n  }\n\n  onToggleFullscreen () {\n    if (\n      !document.fullscreenElement &&\n      !document.mozFullscreenElement &&\n      !document.msFullscreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      if (this.wrapperRef.current) {\n        this.setState(() => ({ isFullscreen: true }))\n\n        setTimeout(() => {\n          this.wrapperRef.current.requestFullscreen()\n          this.chart.updateDimensions(window.innerWidth, window.innerHeight)\n        }, 0)\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen() // see onFullscreenExit()\n      }\n    } \n  }\n\n  onFullscreenExit () {\n    if (\n      document.fullscreenElement ||\n      document.mozFullscreenElement ||\n      document.msFullscreenElement ||\n      document.webkitFullscreenElement\n    ) {\n      return\n    }\n\n    const { width } = this.props\n    this.setState(() => ({ isFullscreen: false }))\n    this.chart.updateDimensions(width, this.getChartHeight())\n  }\n\n  onAddIndicator (i) {\n    const { onAddIndicator } = this.props\n\n    if (!onAddIndicator) {\n      return\n    }\n\n    const { ui } = i\n    const { type } = ui\n    const args = i.args.map(a => a.default)\n    const colors = []\n\n    switch (type) {\n      case 'rsi':\n      case 'line': {\n        colors.push(randomColor())\n        break\n      }\n\n      case 'lines': {\n        ui.lines.forEach(() => colors.push(randomColor()))\n        break\n      }\n\n      case 'bbands': {\n        colors.push(randomColor())\n        colors.push('#fff')\n        colors.push(randomColor())\n        break\n      }\n\n      case 'macd': {\n        colors.push(randomColor())\n        colors.push(randomColor())\n        colors.push(randomColor())\n        break\n      }\n\n      default: {\n        throw new Error(`unknown indicator type: ${type}`)\n      }\n    }\n\n    onAddIndicator([i, args, colors])\n  }\n\n  getTopReservedSpace () {\n    const { disableTopbar, disableToolbar } = this.props\n    let space = 0\n\n    if (!disableToolbar) {\n      space += TOOLBAR_HEIGHT\n    }\n\n    if (!disableTopbar) {\n      space += TOPBAR_HEIGHT\n    }\n\n    return space\n  }\n\n  getChartHeight () {\n    const { isFullscreen } = this.state\n    const height = isFullscreen ? window.innerHeight : this.props.height\n    return height - this.getTopReservedSpace()\n  }\n\n  render () {\n    const {\n      indicatorSettings,\n      settingsModalIndicatorIndex,\n      settingsModalOpen,\n      isFullscreen,\n    } = this.state\n\n    const {\n      marketLabel, bgColor = '#000', candleWidth, candles, onTimeFrameChange,\n      onAddDrawing, isSyncing, disableToolbar, disableTopbar, onDeleteIndicator,\n      disableIndicators, candleLoadingThreshold = 0\n    } = this.props\n\n    const height = isFullscreen ? window.innerHeight : this.props.height\n    const width = isFullscreen ? window.innerWidth : this.props.width\n\n    const { hoveredCandle } = this.state\n    const topReservedSpace = this.getTopReservedSpace()\n    const renderHeight = this.getChartHeight()\n    const canvasStyle = {\n      top: `${topReservedSpace}px`,\n    }\n\n    return (\n      <div\n        ref={this.wrapperRef}\n        className='bfxc__wrapper'\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n        }}\n      >\n        <div\n          className='bfxc__bg'\n          style={{\n            width,\n            height: renderHeight,\n            background: bgColor,\n            top: `${topReservedSpace}px`,\n          }}\n        />\n\n        {!disableTopbar && (\n          <div className='bfxc__topbar'>\n            <p className='bfxcs__topbar-market'>\n              {marketLabel}\n            </p>\n\n            <div className='bfxcs__topbar-ohlc bfxcs__topbar-section'>\n              <div className='bfxcs__topbar-ohlc-entry'>\n                <p>O</p>\n                <p>{hoveredCandle ? formatAxisTick(hoveredCandle[1]) : '-'}</p>\n              </div>\n              <div className='bfxcs__topbar-ohlc-entry'>\n                <p>H</p>\n                <p>{hoveredCandle ? formatAxisTick(hoveredCandle[3]) : '-'}</p>\n              </div>\n              <div className='bfxcs__topbar-ohlc-entry'>\n                <p>L</p>\n                <p>{hoveredCandle ? formatAxisTick(hoveredCandle[4]) : '-'}</p>\n              </div>\n              <div className='bfxcs__topbar-ohlc-entry'>\n                <p>C</p>\n                <p>{hoveredCandle ? formatAxisTick(hoveredCandle[2]) : '-'}</p>\n              </div>\n            </div>\n\n            <div className='bfxcs__topbar-tfs bfxcs__topbar-section'>\n              {Object.keys(TIME_FRAME_WIDTHS).map(tf => (\n                <p\n                  key={tf}\n                  className={ClassNames({ active: tf === candleWidth })}\n                  onClick={() => onTimeFrameChange && onTimeFrameChange(tf)}\n                >{tf}</p>\n              ))}\n            </div>\n\n            {!disableIndicators && (\n              <div className='bfxc__topbar-indicators bfxcs__topbar-section'>\n                <Dropdown\n                  label={(\n                    <span>\n                      <i className='icon-indicators' />\n                      Indicators\n                      <i className='icon-chevron-down-passive' />\n                    </span>\n                  )}\n                >\n                  <ul>\n                    {Object.values(HFI).filter(i => !!i.label).map(i => (\n                      <li\n                        key={i.id}\n                        onClick={() => this.onAddIndicator(i)}\n                      >{i.humanLabel}</li>\n                    ))}\n                  </ul>\n                </Dropdown>\n              </div>\n            )}\n\n            <div className='bfxcs__topbar-fullscreen'>\n              <i\n                className='icon-move'\n                onClick={this.onToggleFullscreen}\n              />\n            </div>\n\n            {isSyncing && (<div className='bfxc__topbar-spinner' />)}\n          </div>\n        )}\n\n        {!disableToolbar && (\n          <ul className='bfxc__toolbar'>\n            <li onClick={() => onAddDrawing && onAddDrawing(LineDrawing)}>Line</li>\n            <li onClick={() => onAddDrawing && onAddDrawing(HorizontalLineDrawing)}>HLine</li>\n            <li onClick={() => onAddDrawing && onAddDrawing(VerticalLineDrawing)}>VLine</li>\n            <li onClick={() => onAddDrawing && onAddDrawing(ParallelLineDrawing)}>PLines</li>\n          </ul>\n        )}\n\n        <canvas\n          width={width}\n          height={renderHeight}\n          ref={this.axisCanvasRef}\n          style={canvasStyle}\n        />\n\n        <canvas\n          width={width}\n          height={renderHeight}\n          ref={this.ohlcCanvasRef}\n          style={canvasStyle}\n        />\n\n        <canvas\n          width={width}\n          height={renderHeight}\n          ref={this.indicatorCanvasRef}\n          style={canvasStyle}\n        />\n\n        <canvas\n          width={width}\n          height={renderHeight}\n          ref={this.drawingCanvasRef}\n          style={canvasStyle}\n        />\n\n        <canvas\n          width={width}\n          height={renderHeight}\n          ref={this.crosshairCanvasRef}\n          style={canvasStyle}\n        />\n\n        {candles.length > candleLoadingThreshold && indicatorSettings.length > 0 && (\n          <ul className='bfxc__overlaysettings-wrapper'>\n            {indicatorSettings.map((settings, i) => (\n              <li\n                key={i}\n                style={{\n                  borderColor: `${settings.colors[0]}99`,\n                  bottom: `${settings.bottom}px`,\n                  left: 32,\n                }}\n              >\n                <p>{settings.name}</p>\n\n                <i\n                  className='icon-settings'\n                  onClick={() => this.onOpenIndicatorSettings(i)}\n                />\n\n                <i\n                  className='icon-delete'\n                  onClick={() => onDeleteIndicator(i)}\n                />\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {settingsModalOpen && (\n          <IndicatorSettingsModal\n            settings={indicatorSettings[settingsModalIndicatorIndex]}\n            onClose={this.onCloseIndicatorSettings}\n            onSave={this.onSaveIndicatorSettings}\n            onDelete={() => {\n              onDeleteIndicator(settingsModalIndicatorIndex)\n              this.onCloseIndicatorSettings()\n            }}\n          />\n        )}\n\n        {candles.length <= candleLoadingThreshold && (\n          <LoadingBeeSpinner top={this.getTopReservedSpace()} />\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { AutoSizer } from 'react-virtualized'\nimport BFXI from 'bfx-hf-indicators'\nimport Chart from './components/Chart'\nimport MockCandleData from './btc_candle_data.json'\nimport './Demo.css'\n\nconst INDICATORS_STORAGE_KEY = 'bfxc-demo-indicators'\nconst DEFAULT_INDICATORS_JSON = '[[\"ema\",[20,\"close\"],[\"#2da3c4\"]],[\"ema\",[100,\"close\"],[\"#fcfcba\"]],[\"macd\",[12,26,9],[\"#2acca1\",\"#02f73b\",\"#1073ba\"]],[\"rsi\",[14],[\"#7320bc\"]],[\"mo\",[10],[\"#f8fc0a\"]],[\"acc\",[10],[\"#b4e560\"]]]'\n\nMockCandleData.sort((a, b) => a[0] - b[0])\n\nexport default class Demo extends React.PureComponent {\n  state = {\n    drawings: [],\n    indicators: [],\n  }\n\n  static loadIndicators () {\n    if (!localStorage) {\n      return []\n    }\n\n    try {\n      return JSON.parse(localStorage.getItem(INDICATORS_STORAGE_KEY) || DEFAULT_INDICATORS_JSON)\n        .map(([iClassID, iArgs, iColors]) => (\n          [Object.values(BFXI).find(i => i.id === iClassID), iArgs, iColors]\n        ))\n    } catch {\n      return []\n    }\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.onUpdateIndicatorArgs = this.onUpdateIndicatorArgs.bind(this)\n    this.onDeleteIndicator = this.onDeleteIndicator.bind(this)\n    this.onAddIndicator = this.onAddIndicator.bind(this)\n    this.onAddDrawing = this.onAddDrawing.bind(this)\n    this.chartRef = React.createRef()\n\n    this.state.indicators = Demo.loadIndicators()\n  }\n\n  onAddIndicator (i) {\n    this.setState(({ indicators }) => ({\n      indicators: [\n        ...indicators,\n        i,\n      ]\n    }))\n\n    this.deferSaveState()\n  }\n\n  onAddDrawing (D) {\n    this.setState(({ drawings }) => ({\n      drawings: [\n        new D(this.chartRef.current.chart),\n        ...drawings,\n      ]\n    }))\n  }\n\n  onDeleteIndicator(index) {\n    this.setState(({ indicators }) => {\n      const nextIndicators = [...indicators]\n      nextIndicators.splice(index, 1)\n      return { indicators: nextIndicators }\n    })\n\n    this.deferSaveState()\n  }\n\n  onUpdateIndicatorArgs(args, index) {\n    this.setState(({ indicators }) => {\n      const nextIndicators = [...indicators]\n      const nextIndicator = [...nextIndicators[index]]\n\n      nextIndicator[1] = args\n      nextIndicators[index] = nextIndicator\n\n      return { indicators: nextIndicators }\n    })\n\n    this.deferSaveState()\n  }\n\n  deferSaveState () {\n    setTimeout(() => {\n      this.saveState()\n    }, 0)\n  }\n\n  saveState () {\n    if (!localStorage) {\n      return\n    }\n\n    const { indicators } = this.state\n    const stored = indicators.map(([iClass, iArgs, iColors]) => (\n      [iClass.id, iArgs, iColors]\n    ))\n\n    localStorage.setItem(INDICATORS_STORAGE_KEY, JSON.stringify(stored))\n  }\n\n  render () {\n    const { drawings, indicators } = this.state\n\n    return (\n      <div id=\"bitfinex-chart-demo__bfxc\">\n        <AutoSizer>\n          {({ width, height }) => (\n            <Chart\n              ref={this.chartRef}\n              indicators={indicators}\n              drawings={drawings}\n              marketLabel='BTC/USD'\n              candles={MockCandleData}\n              candleWidth='1m'\n              width={width}\n              height={height}\n              disableToolbar\n\n              onUpdateIndicatorArgs={this.onUpdateIndicatorArgs}\n              onDeleteIndicator={this.onDeleteIndicator}\n              onAddIndicator={this.onAddIndicator}\n              onAddDrawing={this.onAddDrawing}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Demo from './Demo'\nimport './index.css'\n\nReactDOM.render(<Demo />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}